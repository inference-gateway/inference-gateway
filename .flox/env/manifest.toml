version = 1

[vars]
GOPATH = "$HOME/go"
GOPROXY = "https://proxy.golang.org,direct"
GOSUMDB = "sum.golang.org"
GO111MODULE = "on"
CGO_ENABLED = "1"

PROJECT_NAME = "inference-gateway"
PROJECT_DESCRIPTION = "An open-source, high-performance gateway unifying multiple LLM providers, from local solutions like Ollama to major cloud providers such as OpenAI, Groq, Cohere, Anthropic, Cloudflare, DeepSeek and more."

[install]
go.pkg-path = "go"
go.version = "^1.25.0"

docker.pkg-path = "docker"
docker.version = "^28.4.0"

docker-compose.pkg-path = "docker-compose"
docker-compose.version = "^2.39.1"

go-task.pkg-path = "go-task"
go-task.version = "^3.44.1"

golangci-lint.pkg-path = "golangci-lint"
golangci-lint.version = "^2.5.0"

curl.pkg-path = "curl"
curl.version = "^8.14.1"

jq.pkg-path = "jq" 
jq.version = "^1.8.1"

git.pkg-path = "git"
git.version = "^2.51.0"

kubectl.pkg-path = "kubectl"
kubectl.version = "^1.34.0"

kubernetes-helm.pkg-path = "kubernetes-helm"
kubernetes-helm.version = "^3.19.0"

k3d.pkg-path = "k3d"
k3d.version = "^5.8.3"

mockgen.pkg-path = "mockgen"
mockgen.version = "v0.6.0"

nodejs.pkg-path = "nodejs"
nodejs.version = "^22.17.0"

prettier.pkg-path = "prettier"
prettier.version = "^3.6.2"

claude-code.pkg-path = "claude-code"
claude-code.version = "^1.0.123"

[hook]
on-activate = """
  echo "üöÄ Welcome to $PROJECT_NAME development environment!"
  echo "üìù $PROJECT_DESCRIPTION"
  echo ""
  echo "üì¶ Available tools and commands:"
  echo "  task --list             # Show all available tasks"
  echo "  task build              # Build the gateway"
  echo "  task run                # Run the gateway locally"
  echo "  task test               # Run tests"
  echo "  task lint               # Run linting"
  echo "  task generate           # Generate code from schemas"
  echo "  task pre-commit:install # Install git hooks"
  echo "  spec lint <file>        # Lint OpenAPI/JSON Schema files"
  echo ""
  echo "üîß Getting started checklist:"
  echo "  1. Run 'task pre-commit:install' to set up git hooks"
  echo "  2. Run 'task build' to build the project"
  echo "  3. Run 'task test' to verify everything works"
  echo ""
  
  mkdir -p "$GOPATH/bin"
  
  mkdir -p bin
  
  export GOENV="$FLOX_ENV_CACHE/goenv"

  if [ -f go.mod ]; then
    echo "üì• Installing Go dependencies..."
    go mod download
    echo "‚úÖ Go dependencies installed"
  fi
"""

[profile]
common = '''
  alias gs="git status"
  alias gl="git log --oneline -10"
  alias gd="git diff"
  
  alias build="task build"
  alias test="task test"
  alias lint="task lint"
  alias gen="task generate"
  alias spec="npx @stoplight/spectral-cli"
'''

zsh = '''
  if command -v go >/dev/null 2>&1; then
    autoload -U compinit
    compinit
  fi
'''

bash = '''
  if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
  fi
'''

[options]
systems = [
  "aarch64-darwin",
  "aarch64-linux", 
  "x86_64-darwin",
  "x86_64-linux",
]
cuda-detection = false
