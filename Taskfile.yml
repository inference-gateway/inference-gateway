---
version: "3"

tasks:
  generate:
    desc: "Generate the gateway from OpenAPI Spec"
    cmds:
      - go run cmd/generate/main.go -type ProvidersClientConfig -output providers/client.go
      - go run cmd/generate/main.go -type ProvidersCommonTypes -output providers/common_types.go
      # - go run cmd/generate/main.go -type Providers -output providers
      - go run cmd/generate/main.go -type Config -output config/config.go
      - go run cmd/generate/main.go -type MD -output Configurations.md
      - go run cmd/generate/main.go -type Secret -output examples/kubernetes/basic/inference-gateway/secret.yaml
      - go run cmd/generate/main.go -type ConfigMap -output examples/kubernetes/basic/inference-gateway/configmap.yaml
      - go run cmd/generate/main.go -type Secret -output examples/kubernetes/agent/inference-gateway/secret.yaml
      - go run cmd/generate/main.go -type ConfigMap -output examples/kubernetes/agent/inference-gateway/configmap.yaml
      - go run cmd/generate/main.go -type Secret -output examples/kubernetes/authentication/inference-gateway/secret.yaml
      - go run cmd/generate/main.go -type ConfigMap -output examples/kubernetes/authentication/inference-gateway/configmap.yaml
      - go run cmd/generate/main.go -type Secret -output examples/kubernetes/hybrid/inference-gateway/secret.yaml
      - go run cmd/generate/main.go -type ConfigMap -output examples/kubernetes/hybrid/inference-gateway/configmap.yaml
      - go run cmd/generate/main.go -type Secret -output examples/kubernetes/monitoring/inference-gateway/secret.yaml
      - go run cmd/generate/main.go -type ConfigMap -output examples/kubernetes/monitoring/inference-gateway/configmap.yaml
      - go run cmd/generate/main.go -type Secret -output examples/kubernetes/tls/inference-gateway/secret.yaml
      - go run cmd/generate/main.go -type ConfigMap -output examples/kubernetes/tls/inference-gateway/configmap.yaml
      - go run cmd/generate/main.go -type Env -output examples/docker-compose/.env.example
      - go generate ./providers/... ./api/... ./otel/...

  tidy:
    desc: "Tidy the gateway"
    cmds:
      - go mod tidy

  build:
    desc: "Build the gateway"
    cmds:
      - go build -o bin/inference-gateway cmd/gateway/main.go

  run:
    desc: "Run the gateway"
    cmds:
      - ENVIRONMENT=production go run cmd/gateway/main.go

  lint:
    desc: "Run Go static analysis and linting"
    cmds:
      - golangci-lint run

  test:
    desc: "Run tests"
    cmds:
      - go test -v ./...

  benchmark:
    desc: "Run benchmarks"
    cmds:
      - go test -bench=. -benchmem -benchtime=100x -count=3 ./providers/...

  package:
    desc: "Package the gateway"
    cmds:
      - docker build -t inference-gateway .

  release-dry-run:
    desc: "Run a dry-run of the release"
    cmds:
      - goreleaser release --config .goreleaser.yaml --clean --snapshot --verbose
