---
version: "3"

tasks:
  test-helm:
    desc: "Run helm tests"
    cmds:
      - helm dependency update ../charts/inference-gateway
      - helm lint ../charts/inference-gateway
      - |
        helm template --debug --dry-run \
          ../charts/inference-gateway \
          --values ../charts/inference-gateway/values.yaml \
          --set autoscaling.enabled=true

  test-deploy-infrastructure:
    desc: "Deploy the infrastructure"
    cmds:
      - ctlptl apply -f Cluster.yaml
      - helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      - helm repo add grafana https://grafana.github.io/helm-charts
      - helm repo add codecentric https://codecentric.github.io/helm-charts
      - helm repo add jetstack https://charts.jetstack.io
      - helm repo add bitnami https://charts.bitnami.com/bitnami
      - |
        helm upgrade --install \
          --create-namespace \
          --namespace kube-system \
          --version 4.12.1 \
          ingress-nginx ingress-nginx/ingress-nginx
      - |
        helm upgrade --install \
          --create-namespace \
          --namespace cert-manager \
          --version 1.17.1 \
          --set crds.enabled=true \
          cert-manager jetstack/cert-manager
      - |
        helm upgrade --install \
          --create-namespace \
          --namespace observability \
          --version 70.4.2 \
          --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false \
          --set-string prometheus.prometheusSpec.serviceMonitorNamespaceSelector.matchLabels.monitoring=true \
          --set prometheus.enabled=false \
          --set alertmanager.enabled=false \
          --set kubeStateMetrics.enabled=false \
          --set nodeExporter.enabled=false \
          --set grafana.enabled=false \
          kube-prometheus-stack prometheus-community/kube-prometheus-stack
      - |
        helm upgrade --install \
          --create-namespace \
          --namespace observability \
          --version 5.17.0 \
          grafana-operator grafana/grafana-operator
      - |
        helm upgrade --install \
          --create-namespace \
          --namespace idp \
          --version 16.6.2 \
          --set global.postgresql.auth.username=dbusername \
          --set global.postgresql.auth.password=dbpassword \
          --set global.postgresql.auth.database=keycloak \
          keycloak-db bitnami/postgresql \
          --wait
      - |
        helm upgrade --install \
          --create-namespace \
          --namespace idp \
          --version 7.0.1 \
          --set command[0]="/opt/keycloak/bin/kc.sh" \
          --set args[0]="--verbose" \
          --set args[1]="start" \
          --set args[2]="--http-port=8080" \
          --set args[3]="--hostname-strict=false" \
          --set args[4]="--spi-events-listener-jboss-logging-success-level=info" \
          --set args[5]="--spi-events-listener-jboss-logging-error-level=warn" \
          --set args[6]="--cache=local" \
          --set dbchecker.enabled=true \
          --set database.vendor=postgres \
          --set database.hostname=keycloak-db-postgresql \
          --set database.port=5432 \
          --set database.username=dbusername \
          --set database.password=dbpassword \
          --set database.database=keycloak \
          --set secrets.admin-creds.user=admin \
          --set secrets.admin-creds.password=secret \
          keycloakx codecentric/keycloakx

  test-helm-deploy:
    desc: "deploy the helm chart to a local cluster"
    cmds:
      - task: test-deploy-infrastructure
      - helm dependency update ../charts/inference-gateway
      - |
        helm upgrade --install \
          --create-namespace \
          --namespace inference-gateway \
          --values ../charts/inference-gateway/values.yaml \
          --set autoscaling.enabled=true \
          --set ingress.enabled=true \
          inference-gateway ../charts/inference-gateway

  clean-services:
    desc: "Clean up the services"
    cmds:
      - helm uninstall inference-gateway

  clean:
    desc: "Clean the gateway"
    cmds:
      - ctlptl delete -f Cluster.yaml
